parameters:
 - name: Environment
   default: 'Test' 

name: Pipeline-$(Build.DefinitionName)-$(Date:yyyyMMdd)$(Rev:.r)

pr: none
trigger: none

variables:
   AdoEnvironment: 'test-ado'

pool: 'Azure Pipelines'


stages:
- stage: Stage_${{ parameters.Environment }} 
  displayName: Stage - ${{ parameters.Environment }}
  dependsOn: []

  jobs:  
  - deployment: JobDataBuild
    pool:
      vmImage: 'windows-latest'
    displayName: Job - Data Build
    dependsOn: []
    variables:
      - group: ${{ Parameters.Environment }}-vars
      - template: .\Variables-${{ Parameters.Environment }}.yml

    environment: ${{ variables.AdoEnvironment }}
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self

          - task: VSBuild@1
            displayName: 'Visual Studio Build sln file '
            inputs:
              vsVersion: 17.0
              #solution: DatabaseForSimpliedYaml/DatabaseForSimpliedYaml.sln
              msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(Build.ArtifactStagingDirectory)\\"'
              platform: 'any cpu'
              configuration: release

          - task: CopyFiles@2
            displayName: 'Copy Files to:  $(Build.ArtifactStagingDirectory)'
            inputs:
              SourceFolder: 'DatabaseForSimpliedYaml/DatabaseExample/bin/release'
              Contents: '**.dacpac'
              TargetFolder: '$(Build.ArtifactStagingDirectory)'

          - task: PublishPipelineArtifact@1
            displayName: 'Publish Pipeline Artifact'
            inputs:
              targetPath: '$(Build.ArtifactStagingDirectory)'
              artifact: 'dacpac-built'

          # - task: AzurePowerShell@5
          #   displayName: Capture access token for SQL DB from Azure DevOps Service Connection
          #   inputs:
          #     azureSubscription: ${{ parameters.ServiceConnection }}
          #     ScriptType: 'InlineScript'
          #     azurePowerShellVersion: LatestVersion
          #     Inline: |
          #       $context = [Microsoft.Azure.Commands.Common.Authentication.Abstractions.AzureRmProfileProvider]::Instance.Profile.DefaultContext
          #       $sqlToken = [Microsoft.Azure.Commands.Common.Authentication.AzureSession]::Instance.AuthenticationFactory.Authenticate($context.Account, $context.Environment, $context.Tenant.Id.ToString(), $null, [Microsoft.Azure.Commands.Common.Authentication.ShowDialog]::Never, $null, "https://database.windows.net").AccessToken
          #       Write-Host ("##vso[task.setvariable variable=SQLTOKEN;]$sqlToken")  
          #     errorActionPreference: Continue
        

          - task: 'SqlAzureDacpacDeployment@1'
            displayName: 'Deploy SQL Database - ${{ parameters.DatabaseName }}'
            inputs:
              azureSubscription: ${{ variables.ServiceConnection }}
              ServerName: ${{variables.ServerName}}
              DatabaseName: ${{ variables.DatabaseName }}
              SqlUsername: 'sqladmin'
              SqlPassword: $(SqlPassword)
              #AuthenticationType: 'connectionString'
              #ConnectionString: 'Data Source=${{ parameters.ServerName }};Initial Catalog=${{ parameters.DatabaseName }};Encrypt=true;Connect Timeout=300'
              deployType: 'DacpacTask'
              DeploymentAction: 'Publish'
              DacpacFile: '$(Pipeline.Workspace)/dacpac-built/DatabaseExample.dacpac'
              IpDetectionMethod: 'AutoDetect'
              #additionalArguments: ${{ parameters.AdditionalArguments }} /AccessToken:$(sqlToken) /v:DataFactoryName="ghubvse-test-uks-adf-01"